{"version":3,"sources":["components/Header.js","components/Scoreboard.js","components/Card.js","components/Board.js","components/imageData.js","images/001.png","images/007.png","images/004.png","images/012.png","images/025.png","images/016.png","images/035.png","images/039.png","App.js","index.js"],"names":["Header","Scoreboard","props","wins","total","className","Card","img","keys","imageOnClick","src","alt","width","id","onClick","e","preventDefault","target","imageClicked","Board","images","map","imageData","App","useState","processImages","setImages","setWins","newImages","cnt","push","isClicked","randomArrayShuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","theid","intId","parseInt","forEach","resetImages","shuffleImages","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAUeA,EARA,WACX,OACI,8BACI,gDCMGC,EATI,SAACC,GAChB,IAAQC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,OACI,sBAAKC,UAAU,aAAf,mCAC6BD,EAD7B,cACiDD,MCiB1CG,EArBF,SAACJ,GACV,IAAQK,EAA4BL,EAA5BK,IAAKC,EAAuBN,EAAvBM,KAAMC,EAAiBP,EAAjBO,aAMnB,OACI,qBAAKJ,UAAU,iBAAf,SAEQ,qBACIK,IAAKH,EACLI,IAAI,GACJC,MAAM,QACNC,GAAIL,EACJM,QAAS,SAACC,GAAD,OAZzB,SAAsBA,GAClBA,EAAEC,iBACFP,EAAaM,EAAEE,OAAOJ,IAUMK,CAAaH,OAPJP,ICS9BW,EAhBD,SAACjB,GACX,IAAQkB,EAAyBlB,EAAzBkB,OAAQX,EAAiBP,EAAjBO,aAChB,OACI,qBAAKJ,UAAU,iBAAf,SACKe,EAAOC,KAAI,SAACd,GAAD,OACR,cAAC,EAAD,CACIA,IAAKA,EAAIG,IAETF,KAAMD,EAAIM,GACVJ,aAAcA,GAFTF,EAAIM,UCUdS,EAXG,CCTH,IAA0B,gCCA1B,IAA0B,gCCA1B,IAA0B,gCCA1B,IAA0B,gCCA1B,IAA0B,gCCA1B,IAA0B,gCCA1B,IAA0B,gCCA1B,IAA0B,iCC2E1BC,EArEH,WACR,MAA4BC,mBAASC,KAArC,mBAAOL,EAAP,KAAeM,EAAf,KACA,EAAwBF,mBAAS,GAAjC,mBAAOrB,EAAP,KAAawB,EAAb,KAEA,SAASF,IACL,IAAMG,EAAY,GACdC,EAAM,EASV,OARAP,EAAUD,KAAI,SAACd,GAAD,OACVqB,EAAUE,KAAK,CACXjB,GAAIgB,IACJnB,IAAKH,EACLwB,WAAW,OAIZC,EAAmBJ,GAI9B,SAASI,EAAmBC,GAIxB,IAHA,IACIC,EACAC,EAFAC,EAAeH,EAAMI,OAGlB,IAAMD,GACTD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAEzCF,EAAiBD,EADjBG,GAAgB,GAEhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEzB,OAAOD,EA8BX,OACI,sBAAK5B,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAYF,KAAMA,EAAMC,MAAOgB,EAAOiB,SACtC,cAAC,EAAD,CAAOjB,OAAQA,EAAQX,aArB/B,SAAsBgC,GAClB,IAAIC,EAAQC,SAASF,GACLrB,EACNwB,SAAQ,SAACrC,GACXA,EAAIM,KAAO6B,KACW,IAAlBnC,EAAIwB,WACJJ,EAAQ,GAXxB,WACI,IAAMC,EAAYI,EAAmBP,KACrCC,EAAUE,GAUEiB,KAEAtC,EAAIwB,WAAY,EAChBJ,EAAQxB,EAAO,GApB/B,WACI,IAAMyB,EAAYI,EAAmB,YAAIZ,IACzCM,EAAUE,GAmBEkB,eCvDpBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.dec95def.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <div>\n            <h2>Memory card</h2>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Scoreboard = (props) => {\n    const { wins, total } = props;\n    return (\n        <div className=\"scoreboard\">\n            Scoreboard: &nbsp; Max: {total}&nbsp; Wins: {wins}\n        </div>\n    );\n};\n\nexport default Scoreboard;\n","import React from 'react';\n\nconst Card = (props) => {\n    const { img, keys, imageOnClick } = props;\n\n    function imageClicked(e) {\n        e.preventDefault();\n        imageOnClick(e.target.id);\n    }\n    return (\n        <div className=\"imageContainer\" key={keys}>\n            {\n                <img\n                    src={img}\n                    alt=\"\"\n                    width=\"100px\"\n                    id={keys}\n                    onClick={(e) => imageClicked(e)}\n                ></img>\n            }\n        </div>\n    );\n};\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst Board = (props) => {\n    const { images, imageOnClick } = props;\n    return (\n        <div className=\"boardContainer\">\n            {images.map((img) => (\n                <Card\n                    img={img.src}\n                    key={img.id}\n                    keys={img.id}\n                    imageOnClick={imageOnClick}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Board;\n","import image1 from '../images/001.png';\nimport image2 from '../images/007.png';\nimport image3 from '../images/004.png';\nimport image4 from '../images/012.png';\nimport image5 from '../images/025.png';\nimport image6 from '../images/016.png';\nimport image7 from '../images/035.png';\nimport image8 from '../images/039.png';\n\nconst imageData = [\n    image1,\n    image2,\n    image3,\n    image4,\n    image5,\n    image6,\n    image7,\n    image8,\n];\n\nexport default imageData;\n","export default __webpack_public_path__ + \"static/media/001.961a737a.png\";","export default __webpack_public_path__ + \"static/media/007.5406ef59.png\";","export default __webpack_public_path__ + \"static/media/004.4fd5701a.png\";","export default __webpack_public_path__ + \"static/media/012.6606e255.png\";","export default __webpack_public_path__ + \"static/media/025.d20bdd5d.png\";","export default __webpack_public_path__ + \"static/media/016.823c2e42.png\";","export default __webpack_public_path__ + \"static/media/035.63274696.png\";","export default __webpack_public_path__ + \"static/media/039.201c7b41.png\";","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Scoreboard from './components/Scoreboard';\nimport Board from './components/Board';\nimport imageData from './components/imageData';\n\nconst App = () => {\n    const [images, setImages] = useState(processImages());\n    const [wins, setWins] = useState(0);\n\n    function processImages() {\n        const newImages = [];\n        let cnt = 0;\n        imageData.map((img) =>\n            newImages.push({\n                id: cnt++,\n                src: img,\n                isClicked: false,\n            })\n        );\n\n        return randomArrayShuffle(newImages);\n    }\n\n    //source:https://www.codegrepper.com/code-examples/javascript/typescript+shuffle+array+react\n    function randomArrayShuffle(array) {\n        var currentIndex = array.length,\n            temporaryValue,\n            randomIndex;\n        while (0 !== currentIndex) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n        return array;\n    }\n\n    function shuffleImages() {\n        const newImages = randomArrayShuffle([...images]);\n        setImages(newImages);\n    }\n\n    function resetImages() {\n        const newImages = randomArrayShuffle(processImages());\n        setImages(newImages);\n    }\n\n    function imageOnClick(theid) {\n        let intId = parseInt(theid);\n        let newImages = images;\n        newImages.forEach((img) => {\n            if (img.id === intId) {\n                if (img.isClicked === true) {\n                    setWins(0);\n                    resetImages();\n                } else {\n                    img.isClicked = true;\n                    setWins(wins + 1);\n                    shuffleImages();\n                }\n            }\n        });\n    }\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <Scoreboard wins={wins} total={images.length} />\n            <Board images={images} imageOnClick={imageOnClick} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}